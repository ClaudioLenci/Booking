<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>